# Get up and running:
#   docker build -f Dockerfile.dev -t vehicle-quotes-dev . && docker run -d --name vehicle-quotes-dev --network host -v ${PWD}:/app vehicle-quotes-dev && docker exec -it --user vscode vehicle-quotes-dev bash
#
# Build the image with:
#   docker build -f Dockerfile.dev -t vehicle-quotes-dev .
#
# Run a container based on the image:
#   docker run -d --name vehicle-quotes-dev --network host -v ${PWD}:/app vehicle-quotes-dev
#
# Connect to the container:
#   docker exec -it --user vscode vehicle-quotes-dev bash

# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.187.0/containers/dotnet/.devcontainer/base.Dockerfile

# [Choice] .NET version: 5.0, 3.1, 2.1
ARG VARIANT="6.0"
FROM mcr.microsoft.com/vscode/devcontainers/dotnet:0-${VARIANT}

# [Option] Install Node.js
ARG INSTALL_NODE="false"

# [Option] Install Azure CLI
ARG INSTALL_AZURE_CLI="false"

# [Optional] Uncomment this section to install additional OS packages.
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends postgresql-client-common postgresql-client

# [Optional] Uncomment this line to install global node packages.
# RUN su vscode -c "source /usr/local/share/nvm/nvm.sh && npm install -g <your-package-here>" 2>&1

# Run the remaining commands as the "vscode" user
USER vscode

# Install EF and code generator development tools
RUN dotnet tool install --global dotnet-ef --version 5.0.13
RUN dotnet tool install --global dotnet-aspnet-codegenerator --version 5.0.2
RUN echo 'export PATH="$PATH:/home/vscode/.dotnet/tools"' >> /home/vscode/.bashrc

WORKDIR /app

# Prevent the container from closing automatically
ENTRYPOINT ["tail", "-f", "/dev/null"]
